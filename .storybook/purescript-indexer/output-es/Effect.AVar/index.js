import * as $runtime from "../runtime.js";
import * as Data$dEither from "../Data.Either/index.js";
import * as Data$dMaybe from "../Data.Maybe/index.js";
import {_killVar, _newVar, _putVar, _readVar, _status, _takeVar, _tryPutVar, _tryReadVar, _tryTakeVar, empty} from "./foreign.js";
const $AVarStatus = (tag, _1) => ({tag, _1});
const Killed = value0 => $AVarStatus("Killed", value0);
const Filled = value0 => $AVarStatus("Filled", value0);
const Empty = /* #__PURE__ */ $AVarStatus("Empty");
const $$new = _newVar;
const isKilled = v => v.tag === "Killed";
const isFilled = v => v.tag === "Filled";
const isEmpty = v => v.tag === "Empty";
const ffiUtil = {left: Data$dEither.Left, right: Data$dEither.Right, nothing: Data$dMaybe.Nothing, just: Data$dMaybe.Just, killed: Killed, filled: Filled, empty: Empty};
const kill = err => avar => _killVar(ffiUtil, err, avar);
const put = value => avar => cb => _putVar(ffiUtil, value, avar, cb);
const read = avar => cb => _readVar(ffiUtil, avar, cb);
const status = avar => _status(ffiUtil, avar);
const take = avar => cb => _takeVar(ffiUtil, avar, cb);
const tryPut = value => avar => _tryPutVar(ffiUtil, value, avar);
const tryRead = avar => _tryReadVar(ffiUtil, avar);
const tryTake = avar => _tryTakeVar(ffiUtil, avar);
export {$AVarStatus, Empty, Filled, Killed, ffiUtil, isEmpty, isFilled, isKilled, kill, $$new as new, put, read, status, take, tryPut, tryRead, tryTake};
export * from "./foreign.js";
